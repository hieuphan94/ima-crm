services:
  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./services/backend/.env.production
    mem_limit: 1024m
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--max-time", "5", "-f", "http://127.0.0.1:3000/health"]
      interval: 10s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: admin
      POSTGRES_DB: ima_crm
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    mem_limit: 512m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "ima_crm"]
      interval: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    mem_limit: 256m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 3

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    env_file:
      - ./services/frontend/.env.production
    mem_limit: 1536m
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--max-time", "5", "-f", "http://127.0.0.1:3002/health"]
      interval: 10s
      retries: 5
      start_period: 30s
    volumes:
      - ./services/frontend/src/api/credentials/my-sheet-ima-crm-import-084d657ff146.json:/app/src/api/credentials/my-sheet-ima-crm-import-084d657ff146.json

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./services/nginx/conf.d:/etc/nginx/conf.d
    mem_limit: 256m
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy

volumes:
  pgdata:
  redisdata: