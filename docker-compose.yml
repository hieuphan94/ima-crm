services:
  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    ports:
      - "${PORT_BACKEND}:${PORT_BACKEND}"
    env_file:
      - ./services/backend/.env.production
    mem_limit: 1024m
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:${PORT_BACKEND}/health"]
      interval: 60s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${PORT_POSTGRES}:${PORT_POSTGRES}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    mem_limit: 512m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:alpine
    ports:
      - "${PORT_REDIS}:${PORT_REDIS}"
    volumes:
      - redisdata:/data
    mem_limit: 256m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 3

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    ports:
      - "${PORT_FRONTEND}:${PORT_FRONTEND}"
    env_file:
      - ./services/frontend/.env.production
    mem_limit: 1536m
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:${PORT_FRONTEND}/api/health"]
      interval: 60s
      retries: 5
      start_period: 30s
    volumes:
      - ./services/frontend/src/api/credentials/my-sheet-ima-crm-import-084d657ff146.json:/app/src/api/credentials/my-sheet-ima-crm-import-084d657ff146.json

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount SSL vào container
      - ./services/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf  # Mount file config vào đúng vị trí
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy


volumes:
  pgdata:
  redisdata: